version: 0.2
env:
  variables:
    AWS_ROLE_ARN: "arn:aws:iam::073139075499:policy/sd-codecommit"
    AWS_ROLE_SESSION_NAME: "CodeBuildSession"

phases:
  install:
    runtime-versions:
      python: 3.x
  pre_build:
    commands:
      - echo Logging in to Amazon RDS...
      - sudo apt update -y
      - sudo apt install -y postgresql
      - sudo apt-get install -y awscli git
      - export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' /tmp/assume-role-output)
      - export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' /tmp/assume-role-output)
      - export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' /tmp/assume-role-output)
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - export PGPASSWORD=$DB_PASSWORD
      - SQL_FILE="./release_sql/release1.sql"
  build:
    commands:
      - echo Executing the SQL script...
      - psql -q -h $DB_HOST -U $DB_USER -d $DB_NAME -f $SQL_FILE
      - echo Renaming the script and moving to archive folder...
      - echo Cloning the repository... #test
      # - git --version
      - git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/sd_imgdb
      - ls -la  # List contents of the directory
      - cd sd_imgdb
      - git branch -a  # List all branches
      - git init
      - git checkout release
      - cd release_sql
      - mv release1.sql release_$(date +%Y%m%d%H%M%S).sql
      - echo release script backedup..
      - ls release1.sql/*.sql
      - git config --global user.email "selvadhurai.gunasekaran@sanfordhealth.org"
      - git config --global user.name "selva"
      - echo Configuring Git...
      - git add release_*.sql
      - git commit -m "Archiving executed script"
      - echo Final statement...
      - git push origin release #origin stage added